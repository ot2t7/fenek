Wolfram Language Code: Solve[Sqrt[d.powf(2.0) Cos[t].powf(2.0) + d.powf(2.0) Sin[t].powf(2.0)]/s == Sqrt[(-a + x - d Cos[t]).powf(2.0) + (-b + y - d Sin[t]).powf(2.0)]/v, {d}]

Plain Text: d = (f32::sqrt(4. * s.powf(2.0) * (a.powf(2.0) - 2. * a * x + b.powf(2.0) - 2. * b * y + x.powf(2.0) + y.powf(2.0)) * (-s.powf(2.0) * f32::sin(t).powf(2.0) - s.powf(2.0) * f32::cos(t).powf(2.0) + v.powf(2.0)) + s.powf(4.0) * (-2. * a * f32::cos(t) - 2. * b * f32::sin(t) + 2. * x * f32::cos(t) + 2. y * f32::sin(t)).powf(2.0)) - s.powf(2.0) * (-2. * a * f32::cos(t) - 2. * b * f32::sin(t) + 2. * x * f32::cos(t) + 2. * y * f32::sin(t)))/(2. * (-s.powf(2.0) * f32::sin(t).powf(2.0) - s.powf(2.0) * f32::cos(t).powf(2.0) + v.powf(2.0)))
Plain Text: d = (s.powf(2.0) * (-(-2. * a * f32::cos(t) - 2. * b * f32::sin(t) + 2. * x * f32::cos(t) + 2. * y * f32::sin(t))) - f32::sqrt(4. * s.powf(2.0) * (a.powf(2.0) - 2. * a * x + b.powf(2.0) - 2. * b * y + x.powf(2.0) + y.powf(2.0)) (-s.powf(2.0) * f32::sin(t).powf(2.0) - s.powf(2.0) * f32::cos(t).powf(2.0) + v.powf(2.0)) + s.powf(4.0) (-2. * a * f32::cos(t) - 2. * b * f32::sin(t) + 2. * x * f32::cos(t) + 2. * y * f32::sin(t)).powf(2.0)))/(2. (-s.powf(2.0) * f32::sin(t).powf(2.0) - s.powf(2.0) * f32::cos(t).powf(2.0) + v.powf(2.0)))